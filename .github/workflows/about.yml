name: "About"

on:
  workflow_dispatch:
    inputs:
      verbose:
        description: "If to output a summary."
        required: false
        type: boolean
        default: true
  workflow_call:
    inputs:
      verbose:
        description: "If to output a summary."
        required: false
        type: boolean
        default: false
    outputs:
      name:
        description: "Determined name from package.json"
        value: ${{ jobs.main.outputs.name }}
      nodeVersion:
        description: "Determined node version from package.json"
        value: ${{ jobs.main.outputs.nodeVersion }}
      pnpmVersion:
        description: "Determined pnpm version from package.json"
        value: ${{ jobs.main.outputs.pnpmVersion }}
      version:
        description: "Determined version from package.json"
        value: ${{ jobs.main.outputs.version }}

run-name: |
  ${{ github.workflow }} (verbose: ${{ inputs.verbose }})

env:
  # https://github.com/actions/runner-images/issues/70
  NODE_OPTIONS: "--max_old_space_size=4096"
  nodeVersion: 20
  pnpmVersion: 9

permissions: {}

jobs:
  main:
    name: "Main"
    runs-on: ubuntu-latest
    timeout-minutes: 5
    outputs:
      name: ${{ steps.get-name.outputs.result }}
      nodeVersion: ${{ steps.get-node-version.outputs.result }}
      pnpmVersion: ${{ steps.get-pnpm-version.outputs.result }}
      version: ${{ steps.get-version.outputs.result }}
    steps:
      - id: checkout
        name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          sparse-checkout: |
            scripts
      - id: git-pull
        name: "Pull Changes"
        run: |
          git pull
      - id: installPnpm
        name: "Install: Use PNPM ${{ env.pnpmVersion }}"
        uses: pnpm/action-setup@v4
        with:
          version: ${{ env.pnpmVersion }}
          run_install: false
      - id: installNodeJs
        name: "Install: Use Node.js ${{ env.nodeVersion }}"
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.nodeVersion }}
          cache: "pnpm"
      - id: install
        name: Install
        run: |
          pnpm install --frozen-lockfile
      - id: get-node-version
        name: "Get Node.js Version"
        run: |
          result=$(pnpm --silent about engines node)
          echo "result=${result}" >> $GITHUB_OUTPUT
      - id: get-pnpm-version
        name: "Get PNPM Version"
        run: |
          result=$(pnpm --silent about engines pnpm)
          echo "result=${result}" >> $GITHUB_OUTPUT
      - id: get-version
        name: "Get Version"
        run: |
          result=$(pnpm --silent about version)
          echo "result=${result}" >> $GITHUB_OUTPUT
      - id: get-name
        name: "Get Name"
        run: |
          result=$(pnpm --silent about name)
          echo "result=${result}" >> $GITHUB_OUTPUT
  verbose:
    name: "Verbose"
    runs-on: ubuntu-latest
    needs: main
    if: ${{ inputs.verbose }}
    steps:
      - id: output
        name: "Output"
        run: |
          echo "# ${{ github.workflow }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "* Node Version: ${{ needs.main.outputs.nodeVersion }}" >> $GITHUB_STEP_SUMMARY
          echo "* PNPM Version: ${{ needs.main.outputs.pnpmVersion }}" >> $GITHUB_STEP_SUMMARY
          echo "* Name: ${{ needs.main.outputs.name }}" >> $GITHUB_STEP_SUMMARY
          echo "* Version: ${{ needs.main.outputs.version }}" >> $GITHUB_STEP_SUMMARY
